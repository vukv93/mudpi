(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   '("046a2b81d13afddae309930ef85d458c4f5d278a69448e5a5261a5c78598e012" "7b8f5bbdc7c316ee62f271acf6bcd0e0b8a272fdffe908f8c920b0ba34871d98" default))
 '(package-selected-packages '(gruvbox-theme slime htmlize evil-paredit))
 '(safe-local-variable-values
   '((package . RFC2388)
     (Package . FLEXI-STREAMS)
     (Base . 10)
     (Package . CL-PPCRE)
     (Syntax . COMMON-LISP)))
 '(warning-suppress-types '((comp) (comp))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
;; customization
(evil-mode 1)
(setq evil-undo-system 'undo-redo)
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)
(load-theme 'gruvbox-dark-medium)
(set-face-background 'default "undefined")
(column-number-mode 1)
(setq eww-search-prefix "https://duckduckgo.com/lite/?q=")
(add-hook 'org-mode-hook 'turn-on-auto-fill)
(org-babel-do-load-languages
 'org-babel-load-languages
 '((lisp . t) (dot . t) (shell . t)))
(setq org-file-apps
      '((auto-mode . emacs)
	("\\.x?html?\\'" . "firefox %s")
	("\\.gif\\'" . "firefox %s")
	("\\.pdf\\'" . "zathura \"%s\"")
	("\\.wav\\'" . "mpv %s")
	("\\.mp3\\'" . "mpv %s")
	("\\.flac\\'" . "mpv %s")
	("\\.mp4\\'" . "mpv %s")
	("\\.mkv\\'" . "mpv %s")
	("\\.avi\\'" . "mpv %s")
	("\\.jpg\\'" . "feh %s")
	("\\.png\\'" . "feh %s")
	("\\.bmp\\'" . "feh %s")))
(global-set-key (kbd "C-c l") #'org-store-link)
(global-set-key (kbd "C-c a") #'org-agenda)
(global-set-key (kbd "C-c c") #'org-capture)
(setq org-directory "~/desk/nouua")
(setq org-default-notes-file (concat org-directory "/notebook.org"))
(setq browse-url-browser-function 'browse-url-firefox)
(add-hook 'emacs-lisp-mode-hook 'enable-paredit-mode)
(add-hook 'emacs-lisp-mode-hook 'evil-paredit-mode)
(add-hook 'lisp-mode-hook 'enable-paredit-mode)
(add-hook 'lisp-mode-hook 'evil-paredit-mode)
(menu-bar-mode -1)
(setq c-default-style "linux"
      c-basic-offset 2)
(define-key evil-window-map "\C-w" 'evil-window-set-height)
(helm-mode)
(which-key-mode)
(add-hook 'c-mode-hook 'lsp)
(add-hook 'c++-mode-hook 'lsp)
(defun my-c-mode-hook ()
  (setq c-basic-offset 2
	tab-width 2
	indent-tabs-mode nil))
(add-hook 'c-mode-hook 'my-c-mode-hook)
(setq gc-cons-threshold (* 100 1024 1024)
      read-process-output-max (* 1024 1024)
      treemacs-space-between-root-nodes nil
      company-idle-delay 0.0
      company-minimum-prefix-length 1
      lsp-idle-delay 0.1)  ;; clangd is fast
(with-eval-after-load 'lsp-mode
  (add-hook 'lsp-mode-hook #'lsp-enable-which-key-integration)
  (require 'dap-cpptools)
  (yas-global-mode))
(add-to-list 'load-path "~/.emacs.d/plugins/evil-org-mode")
(require 'evil-org)
(add-hook 'org-mode-hook 'evil-org-mode)
(evil-org-set-key-theme '(navigation insert textobjects additional calendar))
(require 'evil-org-agenda)
(evil-org-agenda-set-keys)
;; credit: yorickvP on Github
(setq wl-copy-process nil)
(defun wl-copy (text)
  (setq wl-copy-process (make-process :name "wl-copy"
                                      :buffer nil
                                      :command '("wl-copy" "-f" "-n")
                                      :connection-type 'pipe
                                      :noquery t))
  (process-send-string wl-copy-process text)
  (process-send-eof wl-copy-process))
(defun wl-paste ()
  (if (and wl-copy-process (process-live-p wl-copy-process))
      nil ; should return nil if we're the current paste owner
    (shell-command-to-string "wl-paste -n | tr -d \r")))
(setq interprogram-cut-function 'wl-copy)
(setq interprogram-paste-function 'wl-paste)
